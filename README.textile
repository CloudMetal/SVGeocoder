h1. SMGeocoder

SMGeocoder fills the lack of a forward geocoding class on iOS, and is an improved alternative to Apple's very unreliable MKReverseGeocoder. It uses the "Google Geocoding API":http://code.google.com/apis/maps/documentation/geocoding/ as its data provider so make sure you read their TOS before using SMGeocoder. 

h2. Installation

Easiest way to install is to drag the SMGeocoder/SMGeocoder folder to your project. That will add both the SMGeocoder and the required TouchJSON classes. 

SMGeocoder also requires the *CoreLocation*, *MapKit* and *AddressBook* frameworks. So make sure you add these to your project.

h2. Using the Reverse Geocoder:

CLLocationCoordinate2D coordinate = CLLocationCoordinate2DMake(45.54181, -73.62928);
SMGeocoder *rGeocoderRequest = [[SMGeocoder alloc] initWithCoordinate:coordinate];
[rGeocoderRequest setDelegate:self];
[rGeocoderRequest startAsynchronous];

h2. Using the Geocoder:

NSString *addressString = @"3245 St-Denis, Montreal"
SMGeocoder *geocodeRequest = [[SMGeocoder alloc] initWithAddress:addressString];
[geocodeRequest setDelegate:self];
[geocodeRequest startAsynchronous];

h2. Using the delegate

<pre>
- (void)geocoder:(SMGeocoder *)geocoder didFindPlacemark:(MKPlacemark *)placemark;
</pre>

On success, SMGeocoder will return a "MKPlacemark":http://developer.apple.com/library/ios/#documentation/MapKit/Reference/MKPlacemark_Class/Reference/Reference.html object.

<pre>
- (void)geocoder:(SMGeocoder *)geocoder didFailWithError:(NSError *)error;
</pre>

SMGeocoder will return an error if Google didn't return any placemark of if there is no connectivity.